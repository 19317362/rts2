#!/usr/bin/env python

import sys
sys.path.insert(0, '../python/lib')

import libnova
import unittest
import numpy

class AngularTest(unittest.TestCase):
	def test(self):
		self.assertAlmostEqual(libnova.angular_separation(0,0,1,1), 1.41417, 4)
		self.assertAlmostEqual(libnova.angular_separation(213.9154,19.1825,201.2983,-11.1614), 32.79302684, 7)
		self.assertAlmostEqual(libnova.angular_separation(0,0,180,0),180)
		self.assertAlmostEqual(libnova.angular_separation(0,0,180,-40),140)

class HrzTest(unittest.TestCase):
	def test(self):
		ra = [0,10,20,120.5,120.52,180,190,250,320,359]
		dec = [40] * len(ra)
		dec.extend([0] * len(ra))
		dec.extend([-20] * len(ra))
		dec.extend([-30] * len(ra))
		dec.extend([-89] * len(ra))
		ra = numpy.array (ra * 5, numpy.float)
		latitude = -20
		lst = 120.51
		self.assertEqual(len(ra), len(dec))
		alt,az = libnova.equ_to_hrz(ra, dec, lst, latitude)
		r_ha,r_dec = libnova.hrz_to_equ(az, alt, latitude)
		# convert HA to RA
		r_ra = (lst - r_ha) % 360

		self.assertEqual(len(ra), len(r_ra))
		self.assertEqual(len(dec), len(r_dec))

		for i in range(len(ra)):
			# 359.999 = 360
			if round (r_ra[i], 4) == 360:
				r_ra[i] = 0
			self.assertAlmostEqual(ra[i], r_ra[i], 4)
			self.assertAlmostEqual(dec[i], r_dec[i], 4)

if __name__ == '__main__':
	unittest.main()
