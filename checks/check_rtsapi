#!/usr/bin/env python

import sys
import unittest
import subprocess
import time
import numpy

sys.path.append('../python/rts2')

try:
    import rtsapi
except:
    raise


class JSONTest(unittest.TestCase):

    def setUp(self):
        lock_prefix = '--lock-prefix=./rts2_test_'
        server = '--server=localhost:6167'
        config = '--config=rts2.ini'
        self.centrald = subprocess.Popen([
            '../src/centrald/rts2-centrald',
            '-i', '--debug',
            lock_prefix, config,
            '--local-port=6167'
        ])
        self.httpd = subprocess.Popen([
            '../src/httpd/rts2-httpd',
            '-i', '--debug',
            lock_prefix, server, config,
            '-p 8889', '--user=pytest:pytest',
	    '--database='
        ])
        self.camd_nf = subprocess.Popen([
            '../src/camd/rts2-camd-dummy',
            '-i', '--debug', '-d NF',
            lock_prefix, server,
            '--width=5000', '--height=5000'
        ])
        time.sleep(5)
        self.j = rtsapi.createProxy(
            'http://localhost:8889', 'pytest', 'pytest')

    def tearDown(self):
        self.camd_nf.terminate()
        self.httpd.terminate()
        self.centrald.terminate()

    def testCentrald(self):
        self.assertEqual(self.j.getValue('centrald', 'longitude', True), -15)
        self.assertEqual(self.j.getValue('centrald', 'latitude'), 50)

        self.assertEqual(self.j.getValue('NF', 'chips', True), 1)
        data = self.j.takeImage('NF')
        self.j.refresh()
        self.assertEqual(self.j.getValue('NF', 'average'), numpy.average(data))


unittest.main()
