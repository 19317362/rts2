# Process this file with autoconf to produce a configure script.C
AC_INIT(rts2, 0.6.2, pkubanek@asu.cas.cz)

AM_INIT_AUTOMAKE([gnu dist-bzip2])

AC_PREREQ(2.50)

AM_MAINTAINER_MODE

# Checks for programs.
AC_PROG_CC
AC_PROG_CXX
AC_PROG_MAKE_SET

# check for lang
AC_LANG_CPLUSPLUS

AC_PROG_LIBTOOL

AC_ARG_ENABLE(focusing,
[  --disable-focusing      disables focusing in camd (=>camd doesn't need cfitsio to build)],
[case "${enableval}" in
	yes) focusing=yes ;;
	no)  focusing=no ;;
	*) AC_MSG_ERROR(bad value ${enableval} for --enable-focusing) ;;
esac],[focusing=yes])

AM_CONDITIONAL(FOCUSING, test x$focusing = xyes)

AC_ARG_ENABLE(mirror,
[  --disable-mirror        disables mirror code in camd (=>camd is a bit smaller)],
[case "${enableval}" in
	yes) mirror=yes ;;
	no)  mirror=no ;;
	*) AC_MSG_ERROR(bad value ${enableval} for --enable-mirror) ;;
esac],[mirror=yes])

AM_CONDITIONAL(MIRROR, test x$mirror = xyes)

AC_ARG_WITH(x-focusc,
[  --without-x-focusc      disables xfocusc],
[case "${withval}" in
	yes) xfocusc=yes ;;
	no)  xfocusc=no ;;
	*) AC_MSG_ERROR(bad value ${enableval} for --enable-xfocusc) ;;
esac],[xfocusc=yes])

AM_CONDITIONAL(XFOCUSC, test x$xfocusc = xyes)

AC_ARG_WITH(libnova,
[  --without-libnova       don't build libnova dependent programs],
[case "${withval}" in
	yes) libnova=yes ;;
	no)  libnova=no ;;
	*) AC_MSG_ERROR(bad value ${withval} for --without-libnova) ;;
esac],[libnova=yes])

AM_CONDITIONAL(LIBNOVA, test x$libnova = xyes)

AC_ARG_WITH(pgsql,
[  --without-pgsql         don't build pgsql dependent clients],
[case "${withval}" in
	yes) psql=yes ;;
	no)  psql=no ;;
	*) AC_MSG_ERROR(bad value ${withval} for --without-pgsql) ;;
esac],[psql=yes])

AC_ARG_WITH(wcs,
[  --without-wcs           don't build WCS dependent programs],
[case "${withval}" in
	yes) wcs=yes ;;
	no)  wcs=no ;;
	*) AC_MSG_ERROR(bad value ${withval} for --without-wcs) ;;
esac],[wcs=yes])

AC_ARG_WITH(sbig,
[  --with-sbig             path to SBIG USB CCD driver, build SBIG USB CCD driver],
SBIG="${withval}";
LIB_SBIG="-L${SBIG} -lsbigudrv $SBIG/csbigcam.o $SBIG/csbigimg.o";
INC_SBIG="-I${SBIG}",
[SBIG=no])

AM_CONDITIONAL(SBIG, test x$SBIG != xno)
AC_SUBST(SBIG)
AC_SUBST(LIB_SBIG)
AC_SUBST(INC_SBIG)

AC_ARG_WITH(andor,
[  --with-andor            path to Andor CCD driver, build Andor CCD driver],
ANDOR="${withval}";
LIB_ANDOR="-L${ANDOR} -landor-shared-gcc3";
INC_ANDOR="-I${ANDOR}",
[ANDOR=no])

AM_CONDITIONAL(ANDOR, test x$ANDOR != xno)
AC_SUBST(ANDOR)
AC_SUBST(LIB_ANDOR)
AC_SUBST(INC_ANDOR)

# for Alta we need special library:(
AC_ARG_WITH(alta,
[  --with-alta             path to Apogee Alta CCD driver, build Apogee Alta CCD driver],
# checks for libusb-config
AC_CHECK_PROG(LIBUSB_CONFIG, libusb-config, yes, no)
if test "$LIBUSB_CONFIG" = "yes"; then
 LIBUSB_LDFLAGS=`libusb-config --libs`
 LIBUSB_CFLAGS=`libusb-config --cflags`
 LIBUSB_VERSION=`libusb-config --version`
else
 AC_MSG_ERROR([libusb not found!])
fi
ALTA="${withval}";
LIB_ALTA="${ALTA}/ApnCamera.o ${ALTA}/ApnCamera_USB.o ${ALTA}/ApogeeUsbLinux.o ${ALTA}/ApnCamData*.o ${ALTA}/ApnCamTable.o ${LIBUSB_LDFLAGS}";
INC_ALTA="-I${ALTA} -I${ALTA}/FpgaRegs ${LIBUSB_CFLAGS}",
[ALTA=no])

AM_CONDITIONAL(ALTA, test x$ALTA != xno)
AC_SUBST(ALTA)
AC_SUBST(LIB_ALTA)
AC_SUBST(INC_ALTA)

# FLI..
AC_ARG_WITH(fli,
[  --with-fli             path to libfli CCD driver, build FLI CCD driver],
FLI="${withval}";
LIB_FLI="-L${FLI} -lfli";
INC_FLI="-I${FLI}",
[FLI=no])

AM_CONDITIONAL(FLI, test x$FLI != xno)
AC_SUBST(FLI)
AC_SUBST(LIB_FLI)
AC_SUBST(INC_FLI)

# check for OPENTPL
AC_ARG_WITH(opentpl,
[  --with-opentpl          path to OPEN TPL mount driver, build IR driver],
OPENTPL="${withval}";
LIB_OPENTPL="-L${OPENTPL}/lib -lssl -lopentpl -lttcommon";
INC_OPENTPL="-I${OPENTPL}/include",
[OPENTPL=no])

AM_CONDITIONAL(OPENTPL, test x$OPENTPL != xno)
AC_SUBST(OPENTPL)
AC_SUBST(LIB_OPENTPL)
AC_SUBST(INC_OPENTPL)

# check for paramount library 
AC_ARG_WITH(paralib,
[  --with-paralib          path to Paramount library, build Paramount driver],
PARALIB="${withval}";
LIB_PARA="${PARALIB}/libmks3.o";
INC_PARA="-I${PARALIB}",
[PARALIB=no])

AM_CONDITIONAL(PARALIB, test x$PARALIB != xno)
AC_SUBST(PARALIB)
AC_SUBST(LIB_PARA)
AC_SUBST(INC_PARA)

# check for PCI8255
AC_ARG_WITH(pci8255,
[  --with-pic8255          path to PCI8255 sources, build Dublin dome],
PCI8255="${withval}";
LIB_PCI8255="-L${PCI8255}";
INC_PCI8255="-I${PCI8255}",
[PCI8255=no])

AM_CONDITIONAL(PCI8255, test x$PCI8255 != xno)
AC_SUBST(PCI8255)
AC_SUBST(LIB_PCI8255)
AC_SUBST(INC_PCI8255)

# Checks for libraries.

AC_CHECK_LIB([m], [sqrt], LIB_M="-lm";
LIBS="${LIBS} -lm"; AC_SUBST(LIB_M), [cat << EOF
**** You don't have math library.
**** Please install one and make sure, that it is available. 
EOF
exit 1])

AC_CHECK_LIB([cfitsio], [ffinit], LIB_CFITSIO="-lcfitsio"; 
AC_SUBST(LIB_CFITSIO), [cat <<EOF
**** You don't have cfitsio installed.
**** Please download one from 
**** http://heasarc.gsfc.nasa.gov/docs/software/fitsio/fitsio.html
EOF
exit 1])

if test "x${wcs}" = "xyes"; then
	AC_CHECK_LIB([wcs], [wcs2pix], LIB_WCS="-lwcs"; 
	AC_SUBST(LIB_WCS), [cat <<EOF
**** You don't have libwcs installed.
**** You can download one from
**** http://tdc-www.harvard.edu/software/wcstools/.
**** Please note that there is no standart procedure to install
**** that library. You have to put headers and lib* files from
**** libwcs directory somewhere, where I can acces them
EOF
	exit 1])
fi

AC_CHECK_LIB([ncurses], [mvwprintw], LIB_NCURSES="-lncurses";
AC_SUBST(LIB_NCURSES), [cat << EOF
**** You don't have ncurser libraries.
**** Please install ncursers (you need devel package as well)
EOF
exit 1])

AC_CHECK_LIB([panel], [update_panels], LIB_PANEL="-lpanel";
AC_SUBST(LIB_PANEL), [cat <<EOF
**** You don't have panel library installed, which is
**** ussually part of ncurses library. Please prove
**** your system for such library.
EOF
exit 1])

AC_CHECK_LIB([nova], [ln_get_version], LIB_NOVA="-lnova"; 
AC_SUBST(LIB_NOVA), [cat << EOF
**** You don't have libnova library version >= 0.10.
**** Please get one from http://libnova.sourceforge.net.
EOF
exit 1])
AC_SUBST([LIBNOVA_SUBDIRS], ['teld writers monitor focusc serverd'])

AC_CHECK_LIB([pthread], [pthread_exit], LIB_PTHREAD="-lpthread";
AC_SUBST(LIB_PTHREAD), [cat << EOF
**** You don't have pthread library installed.
**** Please try to get it somewhere.
EOF
exit 1])

if test "x"$xfocusc = "xyes"; then
	AC_PATH_XTRA
	AC_SUBST([RTS2_XFOCUSC], ['rts2-xfocusc${EXEEXT}'])
fi

AC_CHECK_LIB([jpeg], [jpeg_mem_init], LIB_JPEG="-ljpeg";
AC_SUBST(LIB_JPEG), [cat << EOF
**** You don't have jpeg library installed.
**** Please try to get it somewhere.
EOF
exit 1])

WWWUSER="none"

AC_MSG_CHECKING(for httpd.conf)
httpd_conf=`find /etc /usr/local/etc -name httpd.conf 2>/dev/null | head -n1`
if test "z"$httpd_conf = "z" ; then
	AC_MSG_RESULT(none found)
else
	AC_MSG_RESULT($httpd_conf)
	AC_MSG_CHECKING(for User in httpd.conf)
	WWWUSER=`grep '^User.*$' $httpd_conf | head -n1 | sed -e "s/\(.*User *\| *$\)//"`
	AC_MSG_RESULT($WWWUSER)
fi

AC_SUBST(WWWUSER)

AC_MSG_CHECKING(for date)
DATE=`date +%Y-%m-%d`
if test "z"$DATE = "z" ; then
	AC_MSG_RESULT(none found)
	DATE="unknow"
else
	AC_MSG_RESULT($DATE)
fi

AC_SUBST(DATE)

#debug="-DDEBUG"
debug=""
AC_SUBST(debug)

CFLAGS="-Wall -Wshadow -g"
AC_SUBST(CFLAGS)
CXXFLAGS="-Wall -Wshadow -g"
AC_SUBST(CXXFLAGS)

LDFLAGS=""
AC_SUBST(LDFLAGS)

# Checks for header files.
AC_HEADER_STDC
AC_HEADER_SYS_WAIT
AC_CHECK_HEADERS([argz.h arpa/inet.h dirent.h fcntl.h malloc.h netdb.h netinet/in.h stdlib.h string.h sys/ioctl.h sys/socket.h sys/time.h syslog.h termios.h unistd.h])

# Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_TYPE_PID_T
AC_TYPE_SIZE_T
AC_HEADER_TIME
AC_STRUCT_TM

AC_POSTGRESQL
AC_ECPG

# Check for gsoap
AC_GSOAP

# Checks for library functions.
AC_FUNC_FORK
AC_PROG_GCC_TRADITIONAL
AC_FUNC_MALLOC
AC_FUNC_MKTIME
AC_TYPE_SIGNAL
AC_FUNC_STRTOD
AC_CHECK_FUNCS([dup2 floor gethostbyname gettimeofday inet_ntoa memmove memset select socket strchr strdup strerror strtol bzero mkdir sqrt strcasecmp strncasecmp pow])

AC_CHECK_HEADERS([limits.h]) 
AC_FUNC_CHOWN 
AC_FUNC_MEMCMP
AC_FUNC_SELECT_ARGTYPES 
AC_FUNC_STAT
AC_FUNC_STRFTIME 
AC_FUNC_VPRINTF 
AC_TYPE_MODE_T

AC_CONFIG_SRCDIR(src)
AM_CONFIG_HEADER(include/config.h)

AC_OUTPUT([Makefile
	   man/Makefile
	   include/Makefile
	   html/Makefile
	   src/Makefile
	   src/bckimages/Makefile
	   src/camd/Makefile
	   src/camd/urvc2/Makefile
	   src/camd/apogee/Makefile
	   src/dome/Makefile
	   src/filterd/Makefile
	   src/focusc/Makefile
	   src/focusd/Makefile
	   src/grb/Makefile
	   src/mirror/Makefile
	   src/monitor/Makefile
	   src/plan/Makefile
	   src/sql/Makefile
	   src/sql/create/Makefile
	   src/sql/drop/Makefile
	   src/sql/update/Makefile
	   src/pgsql/Makefile
	   src/phot/Makefile
	   src/serverd/Makefile
	   src/teld/Makefile
	   src/teld/model/Makefile
	   src/utils/Makefile
           src/wcs/Makefile
	   src/writers/Makefile
	   src/utilsdb/Makefile
	   src/db/Makefile
	   src/soap/Makefile
	   man/rts2.1
	   man/rts2.conf.5
	   man/rts2-centrald.1
	   man/rts2-cmon.1]
)

echo "
***************************************
 RTS2 build configuration 

  focusing      ${focusing}
  mirror	${mirror}
  xfocusc       ${xfocusc}
  psql		${psql}
  libnova	${libnova}

CCD's:
  sbig		${SBIG}
  andor         ${ANDOR}
  alta          ${ALTA}
  fli		${FLI}

MOUNT's:
  opentpl       ${OPENTPL}
  paralib       ${PARALIB}

DOME's:
  PCI8255       ${PCI8255}

gsoap           ${gsoap}  

***************************************

Now type 'make' followed by 'make install'
to install rts2 package.

Please note, that you should do 'make clean'
if you change any configuration option.

"
