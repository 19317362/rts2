#!/usr/bin/python
#   Queue targets to selector
#   (C) 2011 Petr Kubanek, Institute of Physics <kubanek@fzu.cz>
#
#   This program is free software; you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation; either version 2, or (at your option)
#   any later version.
#
#   Please visit http://www.gnu.org/licenses/gpl.html for license informations.

from optparse import OptionParser
import sys
import string
import rts2
import rts2.target

if __name__ == '__main__':
  	parser = OptionParser()

	parser.add_option("--unique", help="only accept unique target names", action='store_true', dest='unique')
	parser.add_option("--clear", help="clear given queue", action='store_true',dest='clear')
	parser.add_option("--queue", help='specify queue name on which to act', action='store', dest='queue', default='plan')
	parser.add_option('--server',help='URL to RTS2 XML-RPC server',action='store',dest='server',default='http://localhost:8889')
	parser.add_option("--user",help="user name",action="store",dest='username',default='rts2obs')
	parser.add_option("--password",help="user password",action="store",dest='password',default='&#Karel')
	parser.add_option('--verbose',help='print in/out communication',action='store_true',dest='verbose',default=False)

	(options,args)=parser.parse_args()

	rts2.createProxy(url=options.server, username=options.username, password=options.password, verbose=options.verbose)
	
	q = rts2.Queue(options.queue)

	if options.clear:
		resp = q.clear()
		print "cleared queue {0}".format(options.queue)

	for x in args:
		tars = rts2.target.get_target(x)
		if len(tars) == 0:
			print >> sys.stderr, "cannot find target with name {0}".format(x)
			sys.exit(1)
		if options.unique and len(tars) != 1:
		  	print >> sys.stderr, "target name {0} is not unique - returned target with IDs {1}".format(x,'TBD')
			sys.exit(2)

		tids = []	
		for t in tars:
			resp = q.add_target(t[0])
		  	tids.append(t[0])
			print 'Queued to queue {0} target {1} with ID {2} on ra dec {3} {4}'.format(options.queue,t[1],t[0],t[2],t[3])

	print "Queue {0}: {1}".format(options.queue,q)
