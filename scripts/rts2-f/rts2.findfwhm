#!/usr/bin/tcsh
# rtshell script to measure FWHM of stars near zenith, use r filter
#  E. Falco  03/24/03
#  EF update 09/29/10
#  PK fix defoc_current issues 12/06/11
# OUTLINE:
# run gengetfocus to generate getfocus
# run getfocus
# run analfocus.awk
# if success:
#   store BFOC, FWHM and mirror temps in /home/observer/findfwhm/findfwhm.log
#   set focus to value calculated above
# if failure:
#   exit softly and print error message...

setenv rts2_focusing_succ 0

set currd = `/usr/bin/pwd`
cd /home/observer
set nfilt = 4
set filter = `head -4 /Realtime/lib/filt.dat | tail -1`
#echo "************ cd to /home/observer"

# make sure abort stuff is in place
if (!(${?rts2dir})) then
        set rts2dir = $HOME/RTS2-F
endif
if (!(${?nabortfile})) then
	set nabortfile = $rts2dir/.NABORT
endif

echo "Starting findfwhm...type nabort in any xterm to abort loop."
if (-e $nabortfile) then
    echo "ABORT findfwhm"
    source $rts2dir/rts2.nabort
    goto done
endif

if ( ${?defoc_current} ) then
    if ( $defoc_current != 0 ) then
       set diff_f = `echo $defoc_current | awk '{printf "%+0f",-$1;}'`
       tele hfocus  $diff_f
       rts2-logcom "Nulled focusing offset $defoc_current before starting focusing"
       set defoc_current = 0 
    endif
endif

set filter = `echo $filter  | awk  '{printf "%1s",substr($1,1,1)}'`
    set nfilt1 = `grep -n $filter /Realtime/lib/filt.dat | cut -f1 -d:`
    set nfilt1 = `echo $nfilt1 | awk  '{printf "%1s",$1}'`
    if ($nfilt1 == "") then
	echo "Filter $filter NOT on the wheel, **exit**"
	goto done
    endif
echo $filter >! /home/observer/findfwhm/filter.dat
set dobin = "2"
echo $dobin > /home/observer/findfwhm/dobin.dat
# select focus stars
awk -f /home/observer/RTS2-F/rts2.kgengetfocus
# Now run getfocus, generated by rts2.kgengetfocus
source /home/observer/findfwhm/kgetfocus
# Set date ASAP:
set DATE = `tail -2 /data/temps/temps.txt | head -1`
# locate *.FOCUS.fits
set finefoc = `/home/falco/findfwhm/mlastFOCUS`
# analyze FOCUS file
set analfocuslog = "/home/observer/findfwhm/analfocus.log"
awk -f /home/observer/RTS2-F/rts2.analfocus.awk $finefoc > $analfocuslog
# return to data dir
#echo "************ cd back to " $currd
cd $currd
# tail -1 on analfocus.log, look for BEST FOCUS 
    set TEMP1 = `tail -1 /data/temps/temps.txt | awk  '{printf "%+8.3f",substr($1,1,8)}'`
    set TEMP2 = `tail -1 /data/temps/temps.txt | awk  '{printf "%+8.3f",substr($1,9,8)}'`
    set TEMP3 = `tail -1 /data/temps/temps.txt | awk  '{printf "%+8.3f",substr($1,17,8)}'`
    set TEMP4 = `tail -1 /data/temps/temps.txt | awk  '{printf "%+8.3f",substr($1,25,8)}'`
    set TEMP5 = `tail -1 /data/temps/temps.txt | awk  '{printf "%+8.3f",substr($1,33,8)}'`
    set TEMP6 = `tail -1 /data/temps/temps.txt | awk  '{printf "%+8.3f",substr($1,41,8)}'`
    set TEMP7 = `tail -1 /data/temps/temps.txt | awk  '{printf "%+8.3f",substr($1,49,8)}'`
    set TEMP8 = `tail -1 /data/temps/temps.txt | awk  '{printf "%+8.3f",substr($1,57,8)}'`
    set TEMP9 = `tail -1 /data/temps/temps.txt | awk  '{printf "%+8.3f",substr($1,65,8)}'`
    set TEMP10 = `tail -1 /data/temps/temps.txt | awk  '{printf "%+8.3f",substr($1,73,8)}'`
    set TEMP11 = `tail -1 /data/temps/temps.txt | awk  '{printf "%+8.3f",substr($1,81,8)}'`
    set TEMP12 = `tail -1 /data/temps/temps.txt | awk  '{printf "%+8.3f",substr($1,89,8)}'`
#
set SUCC = `tail -1 $analfocuslog | awk  '{print $1}'`
if ($SUCC == "BFOC") then
# if present, set the focus to BEST FOCUS
# use BEST FOCUS FWHM as seeing measurement
    set BFOC = `tail -1 $analfocuslog | awk  '{printf "%+7.3f",$2}'`
    set FWHM = `tail -1 $analfocuslog | awk  '{printf "%7.3f",$4}'`
#
# set telescope focus to best value found
# change focus to original value
#    tele focus -100
    set OFOC = `tele hfocus ?`
    tele focus $BFOC
    set HFOC = `tele hfocus ?`
# record results in running log
    echo $DATE" "$OFOC" " $HFOC " " $FWHM" "$TEMP1" "$TEMP2" "$TEMP3" "$TEMP4" "$TEMP5" "$TEMP6" "$TEMP7" "$TEMP8" "$TEMP9" "$TEMP10" "$TEMP11" "$TEMP12" "$finefoc $filter>> /home/observer/findfwhm/findfwhm.log
#    echo "***RESULTS:"
#    echo "DATE "$DATE" BEST FOCUS "$HFOC " FWHM " $FWHM" (arcsec) FILTER "$filter
    rts2-logcom "FINDFWHM RESULTS: FWHM "$FWHM" asec FOCUS "$HFOC" FILTER "$filter
    echo $HFOC $TEMP1 $DATE >> /home/observer/findfwhm/tempfocus.dat
    setenv rts2_focusing_succ 1
else 
# failure, set edge or cloud flags?
    set OFOC = `tele hfocus ?`
    set HFOC = "-1"
    set FWHM = "-1"
    if ($SUCC == "EDGE") then
	rts2-logcom 'FINDFWHM FAILED: AT EDGE OF FOCUS RANGE'
    else
	rts2-logcom 'FINDFWHM FAILED: CLOUDS PERHAPS'
    endif
endif
done:
echo "Requesting focus value"
sleep 5
tele hfocus ?
sleep 5
echo " "
