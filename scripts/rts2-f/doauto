# start automatic observing. Uses rts2-seltest to select next target, find and
# execute its script, and waits until it finished before picking a new target
#
# Copyright (C) Emilio Falco (FLWO) & Petr Kubanek (Institute of Physics, Czech Republic)

alias run_obs 'source /home/petr/rts2-sys/bin/run_obs'

source /home/petr/rts2-sys/bin/rts2-f-env

$RTS2/bin/rts2-unabort

set ignoreday=0
setenv notmove 2
umask 022

# set dosky to 0 until we can start skyflats at dusk:
set dosky=0
# setenv TTsky to 0 until time to sky
setenv TTsky 0
# set slit to 0 until slit is open
set slit=0
# set domes to 0 until dome flats done
set domes=0
# we haven't yet run focusing..
setenv rts2_focusing_succ 0


while ( "x$1" != "x" )
	switch ($1)
	  	case "-i":
			set ignoreday=1
			breaksw
		case "-T":
			setenv notmove 1
			breaksw
		case "-s":
			set slit=1
			breaksw
		case "-F":
			setenv rts2_focusing_succ 1
			breaksw
		case "-D":
			set domes=1
			breaksw
		default:
			echo "Unknown option $1 - available options are -i -T -s -F -D"
			exit 0
	endsw
	shift
end

while (1 != 0)
	set ms=`$RTS2/bin/rts2-xmlrpcclient $XMLRPCCON --master-state on`
	if ( $? == 0 && $ms == 0 ) then
	  	echo "system is not in on state"
		sleep 30
		continue
	endif

  	if ( -e $rts2abort ) exit
	set state=`rts2-state -c`
	if ( $ignoreday == 1) set state=3

	switch ($state)
		case 0:
			if ($domes == 0) then
			   source /home/observer/RTS2-F/rts2.domeflats
			   set domes=1
			else
			   echo "Now wait until we can open..."
			   sleep 60
			endif
			breaksw
		case 1:
		        if ($slit == 0) then
			   echo "twilight - open up\!"
			   echo -n "HIT return when ready to open slit: "
			   set hitcr=$<
			   tele slitopen
			   set slit = 1
			else
			   echo "twilight - slit is open\!"
			   sleep 60
			endif
			breaksw
		case 2:
#	check time until skyflat time
	      	   	if ($dosky == 0) then
			   source /home/observer/RTS2-F/rts2.skyflattime
			endif
		        if ($TTsky) then
			   source /home/observer/RTS2-F/rts2.skyflats_pk
			   set dosky=1
			   setenv TTsky 0
			else
			   echo "wait for skyflats"
			   sleep 30
			endif
			if ($dosky == 1) then
			   echo "wait until dark..."
# reference the tel here?
#			   tele ref
			   sleep 60
			endif
			breaksw
		case 3:
			echo "acquiring night observations..."
			# run focusing script
			if ($rts2_focusing_succ == 0) then
			  	echo "running focusing script. Abort with rts2-abort"
				tele ampcen 2
	 			source /home/observer/RTS2-F/rts2.findfwhm
			else
			  	echo "focusing on temperature"
			  	source /home/observer/RTS2-F/rts2.tempfocus
			endif	
			run_obs `$RTS2/bin/rts2-seltest`
			breaksw
		case 4:
# here we could do morning u skyflats if desired, just stop for now.
			source /home/observer/RTS2-F/rts2.skyflats_pk
			echo "Dawn, stow telescope..."
			tele stow
			echo "...telescope should be stowed,"
			tele coversdn
			echo "...mirror covers closed, closing slit,"
			tele slitclose
			echo "...please fill dewar\!"
			exit
		case 5:
		        echo "Should not be here, quit."
			exit
		default:
			echo "unknown state $state"
			exit
	endsw
end
