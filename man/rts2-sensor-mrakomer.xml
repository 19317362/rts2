<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.2//EN"
"http://www.oasis-open.org/docbook/xml/4.2/docbookx.dtd" [

  <!ENTITY dhfirstname "<firstname>Petr</firstname>">
  <!ENTITY dhsurname   "<surname>Kubanek</surname>">
  <!ENTITY dhdate      "<date>2009-07-04</date>">
  <!ENTITY dhsection   "<manvolnum>1</manvolnum>">
  <!ENTITY dhemail     "<email>petr@kubanek.net</email>">
  <!ENTITY dhusername  "Petr Kubanek">
  <!ENTITY dhpackage   "rts2-sensor-mrakomer">

  <!ENTITY % rts2 SYSTEM "rts2.ent">
  %rts2;
]>

<refentry>
  <refentryinfo>
    <title>&dhpackage;</title>
    <productname>rts2</productname>
    <productnumber>&rts2version;</productnumber>
    &dhdate;
    <authorgroup>
      <author>
        &dhfirstname;
        &dhsurname;
	<contrib>Wrote most of the RTS2 package.</contrib>
	<address>
          &dhemail;
	</address>
      </author>
    </authorgroup>
    <copyright>
      <year>2008</year>
      <holder>&dhusername;</holder>
    </copyright>
    &legal;
  </refentryinfo>
  <refmeta>
    <refentrytitle>&dhpackage;</refentrytitle>
    &dhsection;
  </refmeta>
  <refnamediv>
    <refname>&dhpackage;</refname>
    <refpurpose>Driver for cloud meter device (IR cloud sensor). Signal
    presense of clouds over observatory site.</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <cmdsynopsis>
      <command>&dhpackage;</command>
      &deviceapp;
      <arg choice="opt">
	<arg choice="plain"><option>-f <replaceable>serial port</replaceable></option></arg>
      </arg>
      <arg choice="opt">
	<arg choice="plain"><option>-g <replaceable>float number</replaceable></option></arg>
      </arg>
      <arg choice="opt">
	<arg choice="plain"><option>-b <replaceable>float number</replaceable></option></arg>
      </arg>
      <arg choice="opt">
	<arg choice="plain"><option>--heat-interval <replaceable>float number</replaceable></option></arg>
      </arg>
      <arg choice="opt">
	<arg choice="plain"><option>--heat-duration <replaceable>float number</replaceable></option></arg>
      </arg>
    </cmdsynopsis>

  </refsynopsisdiv>

  <refsect1 id="description">
    <title>DESCRIPTION</title>

    <para>
      <command>&dhpackage;</command> monitors cloud sensor. Cloud sensor is a
      simple, relative inexpensive device. It is measuring reflectivity of sky
      in IR wavelength (sky temperature). By substracting measured "sky"
      temperature from ambient temperature, the sensor can detect presense of
      clouds over observing site.
    </para>
    <para>
      The sensor have integrated heater. The heater is used for heating cover
      which covers measurement sensor. As the cover is heated, any water which
      might conensate on it is removed.
    </para>
    <para>
      More about the sensor, including prints for its boards, parts list, etc.,
      can be found at http://rts2.org/wiki/hw:start.
    </para>
  </refsect1>
  <refsect1>
    <title>Sensor operation</title>
    <para>
      Sensor is composed of IR sensor, cover by plastic shield. Inside sensor
      housing is temperature sensor, measuring ambient temperature. If there
      are some clouds above IR sensor, it starts to record higher temperature,
      so the difference between ambient temperature and sky temperature drops
      towards 0.
    </para>
    <para>
      If the observing site is not covered by clouds, the sky sensor measure
      temperature of the sky, which is way lower then ambient temperature (it
      can be say that it is measuring temperature of the Universe around
      Earth). So the temperature difference increase.
    </para>
    <para>
      Sensor algorithm is then trivial: if temperature increase above certain
      value, sensor reports good weather. If it decreas bellow bad weather
      threshold, it reports bad weather. Each sensor must be calibrated to
      local conditions, so it is hard to say which value will work.
    </para>
    <para>
      If conditions (temperature, humidity and pressure) on observing site are
      close to dew point, dew starts to form on sensor cover. It obscure IR
      light, so the sensor is then measuring temperature of water on the cover.
      To prevent this, heater (form by a resistor) can be turned on. Heater
      cannot be turned on all the time, as it will affect measurement of
      ambient temperature, and hence difference used to distinguis between
      cloudy and clear night. The driver has for this heat-interval and
      heat-duration parameters. Driver turns heater on every heat-interval
      seconds for lenght of heat-duration seconds. So if you specify
      heat-interval 300 and heat-duration 30, heater will be off for 5 minutes,
      turned on for 30 seconds, remains off for other 5 minutes, and so on.
    </para>
    <para>
      Heater is operated automatically only when system is in standby or ready
      states, and it is night, dusk or dawn. You can manually activate heater
      anytime using heater variable.
    </para>
  </refsect1>
  <refsect1 id="options">
    <title>OPTIONS</title>

    &optiongnu;

    <variablelist>
      &deviceapplist;
      <varlistentry>
        <term><option>-g <replaceable class="parameter">float number</replaceable></option></term>
	<listitem>
           <para>
	     Specify good trip point. If temperature difference increase above
	     this number, sensor switch (after 5 minutes) off bad weather flag.
	   </para>
	</listitem>
      </varlistentry>
      <varlistentry>
        <term><option>-b <replaceable class="parameter">float number</replaceable></option></term>
	<listitem>
           <para>
	     Bad trip point. If temperature difference drop bellow this value, bad weather is declared.
	     It is usually wise to specify -b lower then -g - that way system will have some hysteris
	   </para>
	</listitem>
      </varlistentry>

    </variablelist>
  </refsect1>
  <refsect1>
    <title>SEE ALSO</title>

    <para>
      <citerefentry>
        <refentrytitle>rts2</refentrytitle>
	<manvolnum>7</manvolnum>
      </citerefentry>
    </para>

  </refsect1>
</refentry>
