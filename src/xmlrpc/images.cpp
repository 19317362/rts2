/* 
 * Images for web interface.
 * Copyright (C) 2010 Petr Kubanek <petr@kubanek.net>
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 */

#include "images.h"
#include <string.h>

typedef struct
{
	const char *data;
	size_t len;
} image_t;

const image_t up = {
	"\x89\x50\x4e\x47\xd\xa\x1a\xa\x0\x0\x0\xd\x49\x48\x44\x52\x0\x0\x0\x18\x0\x0\x0\x22\x8\x6\x0\x0\x0\x45\x96\x19\x33\x0\x0\x0\x1\x73\x52\x47\x42\x0\xae\xce\x1c\xe9\x0\x0\x0\x6\x62\x4b\x47\x44\x0\xff\x0\xff\x0\xff\xa0\xbd\xa7\x93\x0\x0\x0\x9\x70\x48\x59\x73\x0\x0\xb\x13\x0\x0\xb\x13\x1\x0\x9a\x9c\x18\x0\x0\x0\x7\x74\x49\x4d\x45\x7\xda\x5\x12\xb\x31\x2\x69\x87\xc\xf2\x0\x0\x1\xde\x49\x44\x41\x54\x48\xc7\xed\x97\x3d\x4b\x1c\x51\x18\x85\xcf\xfd\x7a\xef\x20\x29\x16\xfd\x19\x42\xfc\xd\x82\x45\x8c\x85\x4d\x7e\xc0\x36\x4b\xaa\x6c\x95\x2e\xcd\x6\xb1\x16\x84\x34\x82\x36\x1b\x2c\x84\xa4\x58\xb\xb7\x71\x86\xc0\x36\x1\xab\x98\x91\xac\x10\x44\x30\x22\xc2\x22\x82\x59\xdd\x9d\xb9\xbe\x29\xd2\x6c\x20\x99\xd9\x9d\xd9\xdb\xe5\xc2\x69\xe6\xe\x3c\x73\xce\xfb\x1\x23\x98\x19\x3e\x8f\x84\xe7\xf3\x1f\x30\x7d\xc0\xfe\x7e\xcc\x1b\x1b\x9f\xc6\xee\xc\x31\x69\x17\x55\x2a\xeb\xcc\xc\xdc\xde\xbe\x11\x53\x77\x50\xab\x7d\x64\x63\x8\xd6\x12\x96\x96\x76\x78\xaa\x80\x28\xea\x72\xab\xf5\x7d\x3b\x8\x14\xac\x55\x88\xe3\x9b\xbd\x66\xf3\x33\x4f\x2d\xa2\x85\x85\x77\x7c\x77\xe7\x7a\xa3\xcf\xb4\xc6\x5c\xb7\x5b\x17\xa5\x1d\xd4\xeb\x2d\x1e\xc\x0\x6b\xd5\xdc\xa8\xa4\x54\x58\x5d\x6d\x72\x29\xc0\xc9\xc9\x8f\x57\x51\x74\x81\x20\x50\x20\xfa\x53\xd6\x2a\x9c\x9f\xff\x44\x18\x7e\xe3\xc2\x11\x2d\x2e\xee\x70\xbf\xff\x98\xf9\x8e\x73\xe\x47\x47\x2f\xc5\xc4\xe\x1a\x8d\x36\x27\x89\x80\xb5\x2a\x53\x33\x33\x84\x5a\x6d\x8f\x27\x6\x74\x3a\xd7\x8\x2\xd\xa2\x7c\x9d\x9d\xd\x70\x7c\x7c\xf1\x76\xec\x88\x56\x56\xde\xf3\xa4\x83\x7e\x7f\x3f\x44\x18\x56\x45\x2e\x60\x6b\xab\xc3\xed\xf6\x65\xa1\xdd\x33\x3f\xff\x4\x6b\x6b\xcf\x45\x66\x44\x61\x78\x5\x22\x59\x48\xa7\xa7\x7d\xc4\xf1\xe5\xeb\x7f\x3a\xa8\x56\x3f\x30\xb3\x2a\xb5\x41\x93\x24\xc5\xee\xee\xb\x1\x0\x7a\xf4\xe2\xf0\xf0\x2b\x57\x2a\x1a\x49\xe2\x90\xa6\x8f\x18\xe\x1d\xb4\xe\x20\x44\x7e\x2d\x66\x67\x5\x8c\xd1\x30\x46\x80\x48\xe3\xe0\xe0\xb\x2f\x2f\x3f\x15\xb9\x73\xd0\x68\x44\xdc\xeb\x3d\x64\xef\x1b\x21\xb0\xb9\xf9\xec\xaf\x73\xa0\xf3\xbe\xcc\x18\x9\xa2\xec\xc8\x64\x86\xc1\x5c\x0\x91\x86\xb5\x2e\xc7\x41\x29\x80\x84\xb5\x32\x37\xa2\xc2\x0\x63\x14\xac\xd5\xfe\x0\xbf\xfb\x5b\xf9\x8c\x48\xc3\x5a\xf6\x5d\x3\x8f\xe\x8c\x51\x20\x62\x9f\x35\x50\x48\x53\xcf\x0\xe7\x8a\xef\xa5\xb1\x22\xca\x3\x94\xaa\x81\x52\x72\xa8\x35\xa8\xa8\x3\xe1\xfb\x7\xe4\x17\xb6\x73\xb2\x1e\xee\xc5\x10\x5a\x0\x0\x0\x0\x49\x45\x4e\x44\xae\x42\x60\x82",
	606
};

void ImageReq::execute (struct sockaddr_in *saddr, std::string path, XmlRpc::HttpParams *params, int &http_code, const char* &response_type, char* &response, size_t &response_length)
{
	const image_t *selImage = NULL;
	if (path == "/up.png")
	{
		selImage = &up;
	}
	else
	{
		throw XmlRpc::XmlRpcException ("cannot find image " + path);
	}

	http_code = HTTP_OK;

	cacheMaxAge (CACHE_MAX_STATIC);

	response_type = "image/png";
	response_length = selImage->len;
	response = new char[response_length];
	memcpy (response, selImage->data, response_length);
}
