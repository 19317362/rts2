/* 
 * Images for web interface.
 * Copyright (C) 2010 Petr Kubanek <petr@kubanek.net>
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 */

#include "images.h"
#include <string.h>

typedef struct
{
	const char *data;
	size_t len;
} image_t;

const image_t up = {
	"\x89\x50\x4e\x47\xd\xa\x1a\xa\x0\x0\x0\xd\x49\x48\x44\x52\x0\x0\x0\x18\x0\x0\x0\x22\x8\x6\x0\x0\x0\x45\x96\x19\x33\x0\x0\x0\x1\x73\x52\x47\x42\x0\xae\xce\x1c\xe9\x0\x0\x0\x6\x62\x4b\x47\x44\x0\xff\x0\xff\x0\xff\xa0\xbd\xa7\x93\x0\x0\x0\x9\x70\x48\x59\x73\x0\x0\xb\x13\x0\x0\xb\x13\x1\x0\x9a\x9c\x18\x0\x0\x0\x7\x74\x49\x4d\x45\x7\xda\x5\xb\x12\x15\x3a\x8e\x8b\xd5\x20\x0\x0\x2\x1f\x49\x44\x41\x54\x48\xc7\xe5\x96\xbd\x6b\xdb\x50\x14\xc5\xcf\x7d\x5f\x57\xf1\x24\x32\x96\xfe\x7\x21\xcd\xdf\x10\xc8\xd0\x40\x68\xe6\xae\xa1\x81\x4c\xde\xbb\x79\x69\xe6\x10\xe8\x14\x30\x5\xd3\xb1\x2d\x98\x4\xba\x54\x82\x92\xe\x9e\x83\x4d\x1c\x28\x21\x90\x96\x52\x12\x4a\x4c\x6a\xd7\x96\xe4\xd7\x29\x2d\xb2\x15\xeb\xc3\xd5\xd4\x7\x77\xd0\x7\x9c\xf7\x3b\xe7\xbe\x2b\x91\xb5\xd6\xa2\xc4\x25\x50\xf2\xfa\xf\x5\xac\xb5\xc8\x13\x5b\x6e\x81\xc3\xc3\xe\xf6\xf6\x3e\x66\x7e\x9f\xf2\x76\x91\xeb\xbe\x80\xb5\xc0\xcd\xcd\xf3\x4c\xfb\xcb\x45\xb0\xbd\xfd\x16\x5a\x1b\x30\x1b\xac\xad\xbd\xfa\x77\x16\x59\x6b\xe1\xfb\x5d\x34\x9b\x9f\xe1\x38\x12\xcc\x12\xed\xf6\xf\x34\x1a\xad\xd4\x3c\x32\x5b\xb4\xb2\xf2\x12\xb7\xb7\x51\xec\x9e\x52\x40\xb7\x5b\x9d\x9f\xa0\x5a\x6d\x62\x38\x4\x98\x65\xac\x84\x90\xd8\xdc\x6c\xfc\xa1\xcc\x2d\x60\xad\x45\xa7\xf3\x5\xbe\x7f\x9\xc7\x91\x30\x26\x5e\xcc\x12\x17\x17\x3f\xe1\x79\xa7\x20\xa2\x62\x16\xad\xae\xd6\xd1\xef\x8f\x67\x12\x46\x51\x84\x56\xeb\x19\x84\x90\x98\xd4\x11\xf7\xed\x1c\x0\x6a\xb5\xf7\x8\x2\x9a\xb2\x66\xb2\x2a\x15\x83\x9d\x9d\x37\x20\x9a\xb6\x4a\x25\x62\x11\xe1\xea\xaa\x87\xe3\xe3\xef\x70\x1c\x95\xa9\x1d\xcf\xcf\x87\x38\x39\xb9\xc4\xf2\xf2\xc3\xd9\x16\xdd\x5d\x6e\x6c\xbc\xce\x7d\xd0\x7\x83\x11\x8e\x8e\x9e\x62\x61\x81\x93\x2d\xb2\xd6\x82\x88\x70\x70\xf0\x9\xcc\x6\xcc\x2a\x57\xb9\x6e\x5\xbb\xbb\x1f\x62\x1b\x55\x93\xd6\xf4\x7a\x3\x78\xde\x37\x18\x53\x6c\xd0\x9e\x9d\xf5\xd1\x6e\x7f\xc5\xd2\xd2\x83\xb8\x45\x77\x53\x72\x6b\xeb\x1d\xac\x95\x73\x8d\xe8\x20\x8\x51\xaf\x3f\x1\xb3\xfe\x4b\x40\x44\xf0\xbc\x36\x5c\x57\x21\x8\x22\x84\xe1\x18\xa3\x51\x4\xa5\x1c\x10\xa5\xd3\x2c\x2e\x12\xb4\x56\xd0\x9a\x60\x8c\x82\xef\x9f\x62\x7d\xfd\x51\x9c\x20\xe9\xb0\xd4\x6a\x3e\xae\xaf\x7f\xcd\x9e\x37\x44\xd8\xdf\x7f\x9c\xd8\xee\x31\x82\xa4\xa5\xb5\x80\x31\xb3\x2d\x13\x2\x18\x8f\xc7\x10\x42\x4c\x9\xa7\x36\xb9\x31\xa\xcc\x51\xa\xc1\xfd\xcf\x32\x8\x8\x30\x8b\x54\x8b\xa\xb\x68\x2d\xc1\xac\x32\x8\x50\x71\x82\xb4\xc\xe6\xb4\x48\x81\xd9\x96\x9d\x41\x89\x4\x5a\x4b\x18\x63\xcb\xb\xd9\x18\x89\x30\x2c\x59\x20\x8a\x8a\xcf\xa5\x4c\x16\xa5\x9\xcc\x95\x81\x94\x2\x4a\x15\x27\x48\xfd\xe8\x7\xc1\x28\xd3\xcf\xae\xd6\x26\x31\x8b\xdf\x7c\x92\xd8\x72\xc2\x7a\xc3\x30\x0\x0\x0\x0\x49\x45\x4e\x44\xae\x42\x60\x82",
	671
};

void ImageReq::execute (std::string path, XmlRpc::HttpParams *params, int &http_code, const char* &response_type, char* &response, size_t &response_length)
{
	const image_t *selImage = NULL;
	if (path == "/up.png")
	{
		selImage = &up;
	}
	else
	{
		throw XmlRpc::XmlRpcException ("cannot find image " + path);
	}

	http_code = HTTP_OK;

	response_type = "image/png";
	response_length = selImage->len;
	response = new char[response_length];
	memcpy (response, selImage->data, response_length);
}
